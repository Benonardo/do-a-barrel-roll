plugins {
    id 'fabric-loom' version '1.4-SNAPSHOT'
//    id 'io.github.juuxel.loom-vineflower' version '1.11.0'
    id 'maven-publish'
    id 'me.fallenbreath.yamlang' version '1.2.1'
}

version = project.mod_version
group = project.maven_group

loom {
    accessWidenerPath = file("src/main/resources/do-a-barrel-roll.accesswidener")

    splitEnvironmentSourceSets()

    mods {
        "do_a_barrel_roll" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }
}

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.

    // Personal maven for cicada and backup mirrors of some dependencies.
    maven { url = "https://maven.enjarai.dev/mirrors" }
    maven { url = "https://maven.enjarai.dev/releases" }

    maven {
        url = "https://www.cursemaven.com"
        allowInsecureProtocol = true
    }

    // Mod Menu.
    maven { url 'https://maven.terraformersmc.com' }

    // MidnightControls.
    maven { url = "https://aperlambda.github.io/maven" }
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }

    // Cloth Config.
    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.terraformersmc.com/releases/" }

    // Jitpack for Mixin Extras.
    maven {
        url 'https://jitpack.io'
        content {
            includeGroup 'com.github.llamalad7'
        }
    }

    // YACL/Controlify
    maven { url = "https://maven.isxander.dev/releases" }
    maven { url = "https://maven.quiltmc.org/repository/release/" }

    // Mod Menu
    maven { url "https://maven.terraformersmc.com/releases" }

    // Permissions API
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_version}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    include modImplementation("nl.enjarai:cicada-lib:${project.cicada_version}") {
        exclude group: "net.fabricmc.fabric-api"
    }

    modImplementation("dev.isxander.yacl:yet-another-config-lib-fabric:${project.yacl_version}") {
        exclude group: "net.fabricmc"
    }

    modCompileOnly("dev.isxander:controlify:${project.controlify_version}") {
        exclude group: "net.fabricmc"
        exclude group: "maven.modrinth"
        exclude group: "com.github.CaffeineMC"
    }

    // Mod Menu integration.
    modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"

    include(implementation("com.github.bawnorton.mixinsquared:mixinsquared-fabric:${project.mixin_squared_version}"))
    annotationProcessor("com.github.bawnorton.mixinsquared:mixinsquared-fabric:${project.mixin_squared_version}")
    clientAnnotationProcessor("com.github.bawnorton.mixinsquared:mixinsquared-fabric:${project.mixin_squared_version}")

    include(modImplementation("me.lucko:fabric-permissions-api:${project.permissions_api_version}"))
}

base {
    archivesName = project.archives_base_name
}

version = "${rootProject.mod_version}+${rootProject.minecraft_version}-fabric"

processResources {
    inputs.property "version", "${rootProject.mod_version}+${rootProject.minecraft_version}"

    filesMatching("fabric.mod.json") {
        expand "version": "${rootProject.mod_version}+${rootProject.minecraft_version}"
    }
}

tasks.withType(JavaCompile).configureEach {
    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    //withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from("LICENSE") {
        rename { "${it}_${base.archivesName.get()}"}
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.release = 17
}

// configure the maven publication
publishing {
    repositories {
        maven {
            name = "enjaraiMaven"
            url = "https://maven.enjarai.nl/releases"
            credentials(PasswordCredentials)
            authentication {
                basic(BasicAuthentication)
            }
        }
    }

    publications {
        mavenJava(MavenPublication) {
            groupId = project.maven_group
            artifactId = archivesBaseName
            version = project.version

            from components.java
        }
    }
}

yamlang {
    targetSourceSets = [sourceSets.main]
    inputDir = 'assets/do_a_barrel_roll/lang'
}
